; Архитектура имеет 6 сегментных регистров: 
; 1 для стека, 1 для данных, 1 для кода и 3 дополнительных

; Регистр - ячейка памяти в процессоре, крайне быстро исполняющаяся
; регистры бывают: общего назначения(8), указатель команд, регистр флагов, сегментные регистры (6)

; EAX/AX/AH/AL - аккумулятор, хранит промежуточные данные 
; (умножение, деление, ввод вывод работает только с ним)

; EBX/BX/BH/BL - базовый регистр, для хранения базового адреса объекта в памяти

; ECX/CX/CH/CL - регистр-счетчик, для команд выполняющих повторяющиеся действия

; EDX/DX/DH/DL - регистр данных, как и ax хранит промежуточные данные, в некоторых
; командах его использование обязательно, в некоторых использование неявное

; DS - сегментный регистр, содержит начальный адрес сегмента данных (переменные, строки)
; DS + величина смещения, определенная в команде укажет на конкретную ячейку в сегм.памяти

; прерывание - сигнал от программного или аппаратного обеспечения сообщающий процессору о
; событии для концентрации внимания. Прерывание сообщает процессору о более высокоприоритетном
; событии. Код прерывается.
; int - команда для программного прерывания, в ah помещается номер прерывания

; директива model задает для ПО модель сегментации SMALL (64Кб)
.model SMALL

; директива компиляции для 386 процессора
.386

; размер стека 100h = 256 байт 
; стек хранит значения регистров, динамические переменные и адреса возврата из подрограмм
.stack 100h

; сегмент содержит инициализированные данные (с начальными значениями)
.data
  Message db 'Hello, world!'

.code
; метка start, метка начала программы
start:
  mov ax, @data
  mov ds, ax  ; напрямую нельзя изменять значение ds, для этого используется промежуточный ax

  ; Вывод сообщения
  mov dx, offset Message  ; offset берет адрес, а не само значение (dx содержит 2 байта, поэтому туда встало бы 2 символа He)
  mov ah, 09h  ; номер прерывания (вывод строки )
  int 21h  ; само прерывание

  ; ждем ввода пользователя (любая клавиша)
  mov ah, 08h  
  int 21h

  ; корректно завершить программу
  mov ah, 4Ch
  mov al, 00h
  int 21h

end start
